/*
    GlobalSpawnPoints.fcg
    Description: This script manages the spawn points for players in the game. It defines spawn locations for different maps and handles player teleportation to these points at the start of the game.
*/
import "StdLibrary.fcc" as StdLib
import "EditorGenLib.fcc" as EditorLib
import "LevelObject.fcc" as LevelObject
import "../GlobalData/GlobalMap.fcg" as GlobalMap
import "Math.fcc" as Math
import "List.fcc" as List
import "Player.fcc" as Player
import "Playable.fcc" as Playable
import "Map.fcc" as Map
import "../GlobalData/GlobalBorder.fcg" as GlobalBorder
import "Animation.fcc" as Animation
graph GlobalSpawnPoints {
    spawnDict Map<int, List<entity<SpawnPosition>>> = Map<int, List<entity<SpawnPosition>>>{}
    event OnAwake() {
        spawnDict[0] = List<entity<SpawnPosition>>{EResSceneBermuda.Team1Spawn_Map1 as entity<SpawnPosition>, EResSceneBermuda.Team2Spawn_Map1 as entity<SpawnPosition>, EResSceneBermuda.Team3Spawn_Map1 as entity<SpawnPosition>, EResSceneBermuda.Team4Spawn_Map1 as entity<SpawnPosition>}
        spawnDict[1] = List<entity<SpawnPosition>>{EResSceneBermuda.Spawn_T1_M2 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T2_M2 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T3_M2 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T4_M2 as entity<SpawnPosition>}
        spawnDict[2] = List<entity<SpawnPosition>>{EResSceneBermuda.Spawn_T1_Map3 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T2_Map3 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T3_Map3 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T4_Map3 as entity<SpawnPosition>}
        spawnDict[3] = List<entity<SpawnPosition>>{EResSceneBermuda.Spawn_T1_Map4 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T2_Map4 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T3_Map4 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T4_Map4 as entity<SpawnPosition>}
        spawnDict[4] = List<entity<SpawnPosition>>{EResSceneBermuda.Spawn_T1_Map5 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T2_Map5 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T3_Map5 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T4_Map5 as entity<SpawnPosition>}
        spawnDict[5] = List<entity<SpawnPosition>>{EResSceneBermuda.Spawn_T1_Map6 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T2_Map6 as entity<SpawnPosition>, EResSceneBermuda.Spawn_T3_Map6 as entity as entity<SpawnPosition>, EResSceneBermuda.Spawn_T4_Map6 as entity<SpawnPosition>}
    }

    func getSpawnPostitions() List<entity<SpawnPosition>> {
        var mapIndex = globalEntity<GlobalMap>.currentMapIndex
        if Map.ContainKey(spawnDict,mapIndex) {
            return spawnDict[mapIndex]
        } else {
            LogError("No spawn positions found for map index: " + mapIndex)
            return List<entity<SpawnPosition>>{}
        }
    }

    async func TeleportToSpawnPositions(){
        var mapIndex = globalEntity<GlobalMap>.currentMapIndex
        var currentMapSpawnPoints = List<entity<SpawnPosition>>{}
        for key, value in spawnDict[mapIndex] {
            Append(currentMapSpawnPoints, value as entity<SpawnPosition>)
        }
        var centerLocation Vector3 = globalEntity<GlobalBorder>.GetFirstBorderLocation(globalEntity<GlobalMap>.currentMapIndex)
        for index, team in GetAllTeams() {
            var randSpawnPoint = RandomInt(0, List.Length(currentMapSpawnPoints))
            var spawnPosition = currentMapSpawnPoints[randSpawnPoint]<SpawnPosition>.AvailablePoint
            var centerPosition = globalEntity<GlobalBorder>.GetFirstBorderLocation(globalEntity<GlobalMap>.currentMapIndex)
            for idx, player in team<Team>.AllTeammates {
                Teleport(player, spawnPosition, Normalize(centerPosition - spawnPosition))
                start PlayCylinderEffect(player)
            }
            List.RemoveAt(currentMapSpawnPoints, randSpawnPoint)
        }
    }

    async func PlayCylinderEffect(player entity<Player>){
        CreateEffect(out var createdEffect, player, EResEffect.CYLINDRICAL as VFXType, LoopType.Once, true)
        WaitForMillisecond(15000)
        Destroy(createdEffect)
    }
}